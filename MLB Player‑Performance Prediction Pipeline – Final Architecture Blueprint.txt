# MLB Player‑Performance Prediction Pipeline – Final Architecture Blueprint

> **Scope**
> Definitive module‑by‑module specification, unified configuration schema, execution flow, and rationale for the fully‑refactored MLB pipeline (Modules **A → L**).  All details corroborate the three PDF reports and the zipped codebase.

---

## 1 · Module‑by‑Module Design Map

| ID     | Script (final name) | Purpose & Core Logic                                                                                                      | Key Inputs                                                                                         | Key Outputs                                                                   | Critical CLI Flags                                           | Logging Behaviour                                                            | Blocking Bugs & Fixes (applied)                                                                                                   |
| ------ | ------------------- | ------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- | ------------------------------------------------------------ | ---------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------- |
| **A**  | `module_a.py`       | Fetch full‑season **historical gamelogs** (batting + pitching) via *pybaseball*; schema‑normalize. Idempotent per‑season. | cfg:`seasons`, `outputs.gamelogs_dir`, `pybaseball_timeout`, `overwrite_policy`                    | `mlb_all_batting_gamelogs_<YEAR>.csv`, `mlb_all_pitching_gamelogs_<YEAR>.csv` | `--season`, `--overwrite-policy`, `--log-level`, `--set`     | `logging_utils.get_rotating_logger("module_a")` – file  *logs/module\_a.log* | • File‑name mismatch ➜ renamed;  • hard‑coded log path ➜ cfg‑driven;  • validator → `@field_validator`;  • duplicate append guard |
| **A2** | `module_a2.py`      | Append **daily StatsAPI gamelogs** (yesterday or date range) to current season CSVs.                                      | cfg:`statsapi.*`, `outputs.gamelogs_dir` + optional `start_date/end_date` injected by orchestrator | Same CSVs updated in‑place                                                    | `--date`, `--start-date`, `--end-date`, `--overwrite-policy` | file *logs/module\_a2.log*                                                   | • CLI flags added; • skip‑on‑duplicate rows; • log dir fixed                                                                      |
| **B**  | `module_b.py`       | Download **static reference CSVs** (parks, teams, …) atomically.                                                          | cfg:`static_csvs`, `outputs.static_dir`, `overwrite_policy`                                        | `<name>.csv` in static dir                                                    | (none beyond common)                                         | file *logs/module\_b.log*                                                    | • Placeholder URLs → cfg list; • logging unified                                                                                  |
| **C**  | `module_c.py`       | Build consolidated **context features** from static CSVs.                                                                 | cfg:`outputs.static_dir`, `outputs.context_dir`, optional ctx params                               | `mlb_context_features.parquet`                                                | –                                                            | file *logs/module\_c.log*                                                    | • Input path mismatches fixed; • rotating logger                                                                                  |
| **D**  | `module_d.py`       | **Merge** gamelogs + context; add rolling aggregates.                                                                     | cfg:`outputs.{gamelogs,context,merged}_dir`, rolling windows                                       | `merged_dataset.parquet`                                                      | –                                                            | *logs/module\_d.log*                                                         | • rolling window cfg exposed; • logger unify                                                                                      |
| **E**  | `module_e.py`       | Fetch **probable starters / line‑ups** via StatsAPI.                                                                      | cfg:`outputs.starters_dir`, `statsapi.*`                                                           | `starters_<DATE>.parquet`                                                     | `--date`                                                     | *logs/module\_e.log*                                                         | –                                                                                                                                 |
| **F**  | `module_f.py`       | **Filter** merged data to modelling subset (min PA, date cut‑offs, etc.).                                                 | cfg:`filter.*`, `outputs.filtered_dir`, `outputs.merged_dir` (+ starters)                          | `filtered_dataset.parquet`                                                    | `--set` overrides                                            | *logs/module\_f.log*                                                         | • `filtered_data_dir` → `outputs.filtered_dir`                                                                                    |
| **G**  | `module_g.py`       | Run trained **ML model** → per‑player predictions.                                                                        | cfg:`model_path`, `outputs.filtered_dir`, `outputs.model_outputs_dir`                              | `preds_<model>_<DATE>.parquet`                                                | `--model-path`, common flags                                 | *logs/module\_g.log*                                                         | –                                                                                                                                 |
| **H**  | `module_h.py`       | **Ensemble / combine** model outputs.                                                                                     | cfg:`outputs.model_outputs_dir`, `outputs.combined_preds_dir`                                      | `combined_predictions_<DATE>.parquet`                                         | –                                                            | *logs/module\_h.log*                                                         | • Nested `predictions.*` section flattened; logger simplification                                                                 |
| **I**  | `module_i.py`       | *Optional* **next‑day evaluation** comparing preds vs actuals. Skips gracefully if actuals unavailable.                   | cfg:`outputs.{combined_preds,tests}_dir`, actuals path                                             | `metrics_<DATE>.json`                                                         | –                                                            | *logs/module\_i.log*                                                         | • Relocated from tests/; Pydantic v2 fix; path keys harmonised                                                                    |
| **K**  | `module_k.py`       | Retrieve **true (vig‑free) betting lines** from Pinnacle (with fallback).                                                 | cfg:`true_line_sources.*`, `outputs.dir`                                                           | `true_lines_<DATE>.csv`                                                       | `--sport`, `--date`                                          | *logs/module\_k.log*                                                         | • script renamed; rate‑limit retry in cfg                                                                                         |
| **L**  | `module_l.py`       | Query **local LLM** to augment/adjust predictions; write final insights.                                                  | cfg:`llm.*`, `outputs.{combined_preds,dir}`; env `DRY_RUN`                                         | `llm_predictions_<DATE>.csv`, `narratives_<DATE>.txt`                         | `--dry-run`                                                  | *logs/module\_l.log*                                                         | • `--dry-run` plumbed; OpenAI dep removed                                                                                         |

*All modules inherit global flags `--config`, `--log-level`, `--set key=value` and respect the **central overwrite\_policy**.*

---

## 2 · Unified `config.yaml` Schema

```yaml
# === Global defaults ===
seasons: [2018, 2019, 2020, 2021, 2022, 2023, 2024]
overwrite_policy: skip  # skip | overwrite | append | refresh

logging:
  dir: logs
  level: INFO
  max_bytes: 10000000   # 10 MB
  backup_count: 3

pipeline:
  module_sequence: [A, A2, B, C, D, E, F, G, H, I, K, L]
  concurrency: 1
  continue_on_failure: false

outputs:
  dir: outputs
  gamelogs_dir:        outputs/gamelogs
  static_dir:          outputs/static_data
  context_dir:         outputs/context_features
  merged_dir:          outputs/merged_data
  starters_dir:        outputs/starters
  filtered_dir:        outputs/filtered_data
  model_outputs_dir:   outputs/model_preds
  combined_preds_dir:  outputs/predictions
  tests_dir:           outputs/evaluation

statsapi:
  timeout: 15
  max_retries: 3
  retry_delay: 2

static_csvs:
  - { name: parks.csv,  url: https://REPLACE‑ME/mlb_parks.csv }
  - { name: teams.csv,  url: https://REPLACE‑ME/mlb_teams.csv }

model:
  model_path: models/xgboost_latest.pkl

llm:
  model: mistral‑7b‑instruct
  endpoint: http://localhost:11434/v1
  temperature: 0.2
  max_tokens: 256
  prompt_template: prompts/mlb_player_prompt.jinja

true_line_sources:
  primary:  https://api.pinnacle.com/…
  backup:   https://backup‑odds‑provider.com/…
```

*Every module reads only the keys shown in its "Config Dependencies" column; unused keys are ignored but documented for clarity.*

---

## 3 · Execution Flow & Data Handoffs

```text
A  ➜  produces season CSVs  ┐
A2 ➜  appends latest games   │
                             ▼
B  ➜ static CSVs ——┐         │
                   │         │
C  (context) <─────┘         │
                             ▼
D  merge(context+gamelogs)───┐
                             │
E  starters (optional)       │
                             ▼
F  filter(merged, starters)──┐
                             ▼
G  model ▶ preds             │
H  ensemble ▶ combined_preds │
K  true_lines                │
L  LLM  ➜ final outputs ▼    │
I  (next‑day QA, optional) ◀─┘
```

*A, A2, B, C, D must finish before data‑hungry stages run; orchestrator enforces order via `module_sequence`.*

---

## 4 · Rationale & Cross‑Verification Appendix

1. **File‑name Alignment** – All scripts renamed to `module_<letter>.py` to satisfy `pipeline.import_or_exec` (Ref § Blocking Issue 1).
2. **Config Completion** – Added `pipeline`, `outputs`, `logging`, module params (Ref § Blocking Issue 2).
3. **CLI Harmony** – `--start-date`, `--end-date`, `--dry-run` incorporated (Ref § Blocking Issue 3).
4. **Pydantic v2 Compliance** – All validators migrated; tests pass.
5. **Central Logging** – Replaced bespoke handlers with `logging_utils.get_rotating_logger` everywhere; max\_bytes & backup\_count exposed in cfg.
6. **Idempotency Rules** – Clarified per‑module skip/overwrite/append semantics; A2 always runs.
7. **Path Key Harmonisation** – Single `outputs.*` namespace removes `filtered_data_dir`, `predictions_dir`, etc.
8. **Evaluation Module Integration** – Moved to `module_i.py`, conditional run when actuals present.
9. **Shell Script Compatibility** – `run_all_pipeline.sh` now works unmodified.
10. **Unit‑Test Fixes** – Indentation error resolved; tests use updated cfg keys.

---

## 5 · Verification Checklist

* [x] **Roles, IO & deps** documented for every module.
* [x] **Config schema** complete, names match code & tests.
* [x] **Central logging** pattern established.
* [x] **Orchestrator sequence** mirrors `A → L` (with optional I).
* [x] All high‑priority bugs from PDF reports addressed.

> **Confidence:** ★★★★☆ – High.  Remaining unknowns limited to external API quirks (StatsAPI, Pinnacle).  Mitigations: retry/back‑off config, graceful fail.

---

*End of Blueprint*
